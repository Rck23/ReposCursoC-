@page "/counter/{currentCountParameter?}"
@inject ILogger<Counter> logger; 

<PageTitle>Contador</PageTitle>

<ModuleTitle Title="Contador" /> 

<p role="status">Contador actual: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Picame</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? currentCountParameter {get; set;}

    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery {get; set;}

    public override async Task SetParameterAsync(ParameterView parameter){

        if(parameter.TryGetValue<string>(nameof(currentCountParameter), out var value)){

            if(value is not null){
                currentCountParameter = value; 
            }    
        }

        await base.SetParameterAsync(parameter); 
    }

    protected override void OnParametersSet(){
        logger.LogInformation("Se envian los parametros")
    }

    protected override void OnInitialized(){
        // OPCION 1
        @* currentCount = currentCountParameter != null ? int.Parse(currentCountParameter) : 0; *@

        // OPCION 2
        currentCount = CounterFromQuery != null ? int.Parse(CounterFromQuery) : 0;

        logger.LogInformation("Se inicia el componente")
    }
    protected override void OnAfterRender(bool firstRender){
        logger.LogInformation("Esto ocurre despues de iniciar el componente")
    }

    
    private void IncrementCount()
    {
        currentCount++;
    }
}
